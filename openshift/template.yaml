apiVersion: v1
kind: Template
labels:
  template: thoth-core
metadata:
  name: thoth-core
  annotations:
    description: thoth-core

objects:
#
# Secrets
#
- apiVersion: v1
  kind: Secret
  metadata:
    name: secret
    namespace: ${THOTH_FRONTEND_NAMESPACE}
  stringData:
    app-secret-key: some-secret-key
    # NOTE: this needs to be changed after deployment with the actual OpenShift key generated
    openshift-api-token: 'EUlZWOBCcStVHgtTHGXg9w2xhupFFwxgOZHe7yan1AM'

#
# Network restriction for analyzer containers.
#
# TODO: as this does not work on `oc cluter up`, this needs to be configured on actual deployment:
#   https://blog.openshift.com/whats-new-in-openshift-3-5-network-policy-tech-preview/
#   https://bugzilla.redhat.com/show_bug.cgi?id=1444144
#- apiVersion: extensions/v1beta1
#  kind: NetworkPolicy
#  metadata:
#    name: restricted-network-for-analyzer
#  spec:
#   podSelector:
#     matchLabels:
#       role: analyzer-container
#   # TODO: whitelist supported registries to pull images from
#   ingress:
#   - {}
#   egress:
#   - {}

#
# Services
#
- apiVersion: v1
  kind: Service
  metadata:
    labels:
      service: thoth-user-api
    name: thoth-user-api
    namespace: ${THOTH_FRONTEND_NAMESPACE}
  spec:
    ports:
    - port: 80
      protocol: TCP
      targetPort: 8080
    selector:
      service: thoth-user-api

- apiVersion: v1
  kind: Service
  metadata:
    labels:
      service: thoth-result-api
    name: thoth-result-api
    # TODO: move to middleend
    namespace: ${THOTH_FRONTEND_NAMESPACE}
  spec:
    ports:
    - port: 80
      protocol: TCP
      targetPort: 8080
    selector:
      service: thoth-result-api
    containers:
        - env:
          - name: THOTH_RESULT_API_HOSTNAME
            value: ${THOTH_RESULT_API_HOSTNAME}

#
# Routes
#
- apiVersion: v1
  kind: Route
  metadata:
    name: thoth-user-api-hostname
    namespace: ${THOTH_FRONTEND_NAMESPACE}
  spec:
    host: ${THOTH_USER_API_HOSTNAME}
    to:
      kind: Service
      name: thoth-user-api

#
# Service accounts
#
- apiVersion: v1
  kind: ServiceAccount
  metadata:
    name: master-access
  automountServiceAccountToken: true

#
# Deployment configs
#
- apiVersion: v1
  kind: DeploymentConfig
  metadata:
    labels:
      service: thoth-user-api
    name: thoth-user-api
    namespace: ${THOTH_FRONTEND_NAMESPACE}
  spec:
    replicas: 1
    selector:
      service: thoth-user-api
    template:
      metadata:
        labels:
          service: thoth-user-api
      spec:
        containers:
        - env:
          - name: APP_SERVICE_PORT
            value: "8080"
          - name: OPENSHIFT_API_URL
            value: ${OPENSHIFT_API_URL}
          - name: OPENSHIFT_PROJECT_NAME
            value: ${OPENSHIFT_PROJECT_NAME}
          - name: APP_SECRET_KEY
            valueFrom:
              secretKeyRef:
                name: secret
                key: app-secret-key
          - name: OPENSHIFT_API_TOKEN
            valueFrom:
              secretKeyRef:
                name: secret
                key: openshift-api-token
          name: thoth-user-api
          ports:
            - containerPort: 8080
              protocol: TCP
          resources:
            requests:
              memory: "128Mi"
              cpu: "125m"
            limits:
              memory: "256Mi"
              cpu: "500m"
          readinessProbe:
            httpGet:
              path: '/readiness'
              port: 8080
              scheme: HTTP
            initialDelaySeconds: 5
            periodSeconds: 60
            timeoutSeconds: 30
          livenessProbe:
            httpGet:
              path: '/liveness'
              port: 8080
              scheme: HTTP
            initialDelaySeconds: 5
            periodSeconds: 60
            timeoutSeconds: 30
        restartPolicy: Always
    test: false
    serviceAccount: master-access
    triggers:
    - type: ConfigChange
    - type: ImageChange
      imageChangeParams:
        automatic: true
        containerNames:
          - thoth-user-api
        from:
          kind: ImageStreamTag
          name: 'thoth-user-api:latest'

- apiVersion: v1
  kind: DeploymentConfig
  metadata:
    labels:
      service: thoth-result-api
    name: thoth-result-api
    namespace: ${THOTH_FRONTEND_NAMESPACE}
  spec:
    replicas: 1
    selector:
      service: thoth-result-api
    template:
      metadata:
        labels:
          service: thoth-result-api
      spec:
        containers:
        - env:
          name: thoth-result-api
          ports:
            - containerPort: 8080
              protocol: TCP
          resources:
            requests:
              memory: "128Mi"
              cpu: "125m"
            limits:
              memory: "256Mi"
              cpu: "500m"
          readinessProbe:
            httpGet:
              path: '/readiness'
              port: 8080
              scheme: HTTP
            initialDelaySeconds: 5
            periodSeconds: 60
            timeoutSeconds: 30
          livenessProbe:
            httpGet:
              path: '/liveness'
              port: 8080
              scheme: HTTP
            initialDelaySeconds: 5
            periodSeconds: 60
            timeoutSeconds: 30
        restartPolicy: Always
    test: false
    triggers:
    - type: ConfigChange
    - type: ImageChange
      imageChangeParams:
        automatic: true
        containerNames:
          - thoth-result-api
        from:
          kind: ImageStreamTag
          name: 'thoth-result-api:latest'

#
# Image streams
#
- apiVersion: v1
  kind: ImageStream
  metadata:
    name: python
    annotations:
      openshift.io/display-name: Python
    namespace: ${THOTH_FRONTEND_NAMESPACE}
  spec:
    tags:
      - name: "3.6"
        annotations:
          openshift.io/display-name: Python 3.6
          openshift.io/provider-display-name: Red Hat, Inc.
          description: "Build and run Python 3.6 applications on CentOS 7. For more information about using this builder image, including OpenShift considerations, see https://github.com/sclorg/s2i-python-container/blob/master/3.6/README.md."
          iconClass: icon-python
          tags: builder,python
          supports: python:3.6,python
          version: "3.6"
          sampleRepo: "https://github.com/openshift/django-ex.git"
        from:
          kind: DockerImage
          name: docker.io/centos/python-36-centos7:latest

- apiVersion: v1
  kind: ImageStream
  metadata:
    labels:
    name: thoth-result-api
    # TODO: move to middleend
    namespace: ${THOTH_FRONTEND_NAMESPACE}
  spec:
    name: latest

- apiVersion: v1
  kind: ImageStream
  metadata:
    labels:
    name: thoth-user-api
    namespace: ${THOTH_FRONTEND_NAMESPACE}
  spec:
    name: latest

#
# Build configs
#
- apiVersion: v1
  kind: BuildConfig
  metadata:
    creationTimestamp: null
    name: thoth-result-api
    namespace: ${THOTH_FRONTEND_NAMESPACE}
  spec:
    output:
      to:
        kind: ImageStreamTag
        name: thoth-result-api:latest
    source:
      git:
        # TODO: create a parameter
        uri: https://github.com/fridex/thoth-result-api
      secrets: []
      type: Git
    strategy:
      sourceStrategy:
        from:
          kind: ImageStreamTag
          name: python:3.6
      type: Source
    triggers:
    - github:
        # TODO: create a secret
        secret: TcaowunWDfKGNFWPRQP6
      type: GitHub
    - type: ConfigChange
    - imageChange: {}
      type: ImageChange

- apiVersion: v1
  kind: BuildConfig
  metadata:
    creationTimestamp: null
    name: thoth-user-api
    namespace: ${THOTH_FRONTEND_NAMESPACE}
  spec:
    output:
      to:
        kind: ImageStreamTag
        name: thoth-user-api:latest
    source:
      git:
        uri: https://github.com/fridex/thoth-user-api
      secrets: []
      type: Git
    strategy:
      sourceStrategy:
        from:
          kind: ImageStreamTag
          name: python:3.6
      type: Source
    triggers:
    - github:
        # TODO: create a secret
        secret: TcaowunWDfKGNFWPRQP6
      type: GitHub
    - type: ConfigChange
    - imageChange: {}
      type: ImageChange

#
# Image analyzers
#
#- apiVersion: v1
#  kind: BuildConfig
#  metadata:
#    name: thoth-dependency-extract
#    labels:
#       role: analyzer-container
#    # TODO: move to middleend
#    namespace: ${THOTH_FRONTEND_NAMESPACE}
#  spec:
#    runPolicy: Parallel
#    triggers:
#      - type: Generic
#        generic:
#          secret: secret
#          allowEnv: true
#    strategy:
#      customStrategy:
#        from:
#          # TODO: move this to our OpenShift registry instead
#          kind: DockerImage
#          name: fridex/thoth-pkgdeps


parameters:
- description: A hostname where the Thoth API should be exposed (will be auto-generated if empty).
  displayName: Thoth user API hostname
  required: false
  name: THOTH_USER_API_HOSTNAME

- description: A hostname where the analyzers should post results to.
  displayName: Thoth result API hostname
  required: true
  name: THOTH_RESULT_API_HOSTNAME
  value: thoth-result-api

- description: OpenShift API URL in base format (without API path).
  displayName: OpenShift base API URL
  required: true
  name: OPENSHIFT_API_URL
  # This value should be OK inside the cluster as this is exposed to all contianers running inside the OpenShift cluster.
  value: 'https://openshift.default.svc.cluster.local'

- description: A name of the OpenShift project under which the user-facing API server runs.
  displayName: OpenShift project name
  required: true
  # TODO: replace with middleend namespace
  name: OPENSHIFT_PROJECT_NAME
  value: 'myproject'

- description: A name for Thoth frontend namespace.
  displayName: Thoth frontend namespace
  required: true
  name: THOTH_FRONTEND_NAMESPACE
  value: 'thoth-frontend'

- description: A name for Thoth middleend namespace.
  displayName: Thoth middleend namespace
  required: true
  name: THOTH_MIDDLEEND_NAMESPACE
  value: 'thoth-middleend'

- description: Admin user for the Thoth project.
  displayName: Thoth admin
  required: true
  name: THOTH_ADMIN_USER
  value: 'developer'

- description: Description for frontend part of Thoth core
  displayName: Description of Thoth core frontend
  required: true
  name: THOTH_FRONTEND_DESCRIPTION
  value: 'Frontend part of Thoth core'

- description: Name of Thoth core frontend
  displayName: Thoth core frontend name
  required: true
  name: THOTH_FRONTEND_DISPLAYNAME
  value: 'Thoth core frontend'

- description: Description for middleend part of Thoth core
  displayName: Description of Thoth core middleend
  required: true
  name: THOTH_MIDDLEEND_DESCRIPTION
  value: 'Middleend part of Thoth core'

- description: Name of Thoth core middleend
  displayName: Thoth core middleend name
  required: true
  name: THOTH_MIDDLEEND_DISPLAYNAME
  value: 'Thoth core middleend'
