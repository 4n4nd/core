apiVersion: v1
kind: Template
labels:
  template: thoth-core
metadata:
  name: thoth-core
  annotations:
    description: This is Thoth Core - Analyzer and Results API and supporting components 
    openshift.io/display-name: Thoth Core
    tags: poc,thoth,ai-stacks
    template.openshift.io/documentation-url: https://github.com/AICoE/Thoth/
    template.openshift.io/long-description: This template defines resources needed
      to deploy Thoth Core Services as a Proof-of-Concept to OpenShift.
    template.openshift.io/provider-display-name: Red Hat, Inc.

objects:

#
# Application Configuration
## Secrets
- apiVersion: v1
  kind: Secret
  metadata:
    name: thoth
  stringData:
    app-secret-key: some-secret-key
    thoth-secret: ${THOTH_SECRET}
    ceph-key-id: ${THOTH_CEPH_KEY_ID}
    ceph-secret-key: ${THOTH_CEPH_SECRET_KEY}

## Config
- kind: ConfigMap
  apiVersion: v1
  metadata:
    name: thoth
  data:
    middletier_namespace: ${THOTH_MIDDLEEND_NAMESPACE}
    backend_namespace: ${THOTH_BACKEND_NAMESPACE}
    ceph-bucket-name: ${THOTH_CEPH_BUCKET}
    ceph-host: ${THOTH_CEPH_HOST}
    user-api-service-port: '8080'
    buildlogs-path: /buildlogs
    ceph-results-path: /results
    analyzer-cleanup-time: ${THOTH_ANALYZER_CLEANUP_TIME}
    sync-observations: ${THOTH_SYNC_OBSERVATIONS}
    debug-cleanup: ${THOTH_CLEANUP_DEBUG}

## Service Accounts
- kind: ServiceAccount
  apiVersion: v1
  metadata:
    name: analyzer
  automountServiceAccountToken: true
  
#
# Services
- apiVersion: v1
  kind: Service
  metadata:
    labels:
      service: user-api
    name: user-api
  spec:
    ports:
    - port: 80
      protocol: TCP
      targetPort: 8080
    selector:
      service: user-api

- apiVersion: v1
  kind: Service
  metadata:
    labels:
      service: result-api
    name: result-api
  spec:
    ports:
    - port: 80
      protocol: TCP
      targetPort: 8080
    selector:
      service: result-api
    containers:
        - env:
          - name: THOTH_RESULT_API_HOSTNAME
            value: result-api
          - name: THOTH_CEPH_HOST
            valueFrom:
              configMapKeyRef:
                key: ceph-host
                name: thoth
          - name: THOTH_CEPH_BUCKET
            valueFrom:
              configMapKeyRef:
                key: ceph-bucket-name
                name: thoth
          - name: THOTH_CEPH_KEY_ID
            valueFrom:
              secretKeyRef:
                name: thoth
                key: ceph-key-id
          - name: THOTH_CEPH_SECRET_KEY
            valueFrom:
              secretKeyRef:
                name: thoth
                key: ceph-secret-key

#
# Routes
- kind: Route
  apiVersion: v1
  metadata:
    name: user-api
  spec:
    host: ${THOTH_USER_API_HOSTNAME}
    to:
      kind: Service
      name: user-api

- kind: Route
  apiVersion: v1
  metadata:
    name: result-api
  spec:
    host: ${THOTH_RESULT_API_HOSTNAME}
    to:
      kind: Service
      name: result-api
#
# Deployment configs
#
- apiVersion: v1
  kind: DeploymentConfig
  metadata:
    labels:
      service: user-api
    name: user-api
  spec:
    replicas: 1
    selector:
      service: user-api
    template:
      metadata:
        labels:
          service: user-api
      spec:
        serviceAccountName: analyzer
        containers:
        - env:
          - name: APP_SERVICE_PORT
            valueFrom:
              configMapKeyRef:
                key: user-api-service-port
                name: thoth
          - name: KUBERNETES_API_URL
            value: 'https://kubernetes.default.svc.cluster.local'
          - name: KUBERNETES_VERIFY_TLS
            value: ${KUBERNETES_VERIFY_TLS}
          - name: THOTH_RESULT_API_HOSTNAME
            value: thoth-result-api
          - name: THOTH_RESULT_API_URL
            value: http://thoth-result-api
          - name: THOTH_MIDDLEEND_POD_CPU_LIMIT
            value: '0.5'
          - name: THOTH_MIDDLEEND_POD_MEMORY_LIMIT
            value: '0.5Gi'
          - name: THOTH_MIDDLEEND_NAMESPACE
            valueFrom:
              configMapKeyRef:
                key: middletier_namespace
                name: thoth
          - name: THOTH_BACKEND_NAMESPACE
            valueFrom:
              configMapKeyRef:
                key: backend_namespace
                name: thoth                
          - name: THOTH_BUILDLOGS_PERSISTENT_VOLUME_PATH
            valueFrom:
              configMapKeyRef:
                key: buildlogs-path
                name: thoth
          - name: THOTH_CEPH_HOST
            valueFrom:
              configMapKeyRef:
                key: ceph-host
                name: thoth
          - name: THOTH_CEPH_BUCKET
            valueFrom:
              configMapKeyRef:
                key: ceph-bucket-name
                name: thoth
          - name: THOTH_SECRET
            valueFrom:
              secretKeyRef:
                name: thoth
                key: thoth-secret
          - name: THOTH_JANUSGRAPH_HOST
            value: janusgraph
          - name: THOTH_JANUSGRAPH_PORT
            value: '80'
          - name: THOTH_USER_API_APP_SECRET_KEY
            valueFrom:
              secretKeyRef:
                name: thoth
                key: app-secret-key
          - name: THOTH_CEPH_KEY_ID
            valueFrom:
              secretKeyRef:
                name: thoth
                key: ceph-key-id
          - name: THOTH_CEPH_SECRET_KEY
            valueFrom:
              secretKeyRef:
                name: thoth
                key: ceph-secret-key
          name: user-api
          ports:
            - containerPort: 8080
              protocol: TCP
          resources:
            requests:
              memory: "128Mi"
              cpu: "125m"
            limits:
              memory: "256Mi"
              cpu: "500m"
          readinessProbe:
            httpGet:
              path: '/readiness'
              port: 8080
              scheme: HTTP
            initialDelaySeconds: 5
            periodSeconds: 10
            timeoutSeconds: 10
          livenessProbe:
            httpGet:
              path: '/liveness'
              port: 8080
              scheme: HTTP
            initialDelaySeconds: 5
            periodSeconds: 60
            timeoutSeconds: 10
          volumeMounts:
            - mountPath: /buildlogs
              name: buildlogs
        restartPolicy: Always
        volumes:
          - name: buildlogs
            persistentVolumeClaim:
              claimName: buildlogs
    test: false
    triggers:
    - type: ConfigChange
    - type: ImageChange
      imageChangeParams:
        automatic: true
        containerNames:
          - user-api
        from:
          kind: ImageStreamTag
          name: 'user-api:stable'

- apiVersion: v1
  kind: DeploymentConfig
  metadata:
    labels:
      service: result-api
    name: result-api
  spec:
    replicas: 1
    selector:
      service: result-api
    template:
      metadata:
        labels:
          service: result-api
      spec:
        containers:
        - env:
          - name: THOTH_PERSISTENT_VOLUME_PATH
            valueFrom:
              configMapKeyRef:
                key: ceph-results-path
                name: thoth
          - name: THOTH_CEPH_HOST
            valueFrom:
              configMapKeyRef:
                key: ceph-host
                name: thoth
          - name: THOTH_CEPH_BUCKET
            valueFrom:
              configMapKeyRef:
                key: ceph-bucket-name
                name: thoth
          - name: THOTH_CEPH_KEY_ID
            valueFrom:
              secretKeyRef:
                name: thoth
                key: ceph-key-id
          - name: THOTH_CEPH_SECRET_KEY
            valueFrom:
              secretKeyRef:
                name: thoth
                key: ceph-secret-key
          name: result-api
          ports:
            - containerPort: 8080
              protocol: TCP
          resources:
            requests:
              memory: "128Mi"
              cpu: "125m"
            limits:
              memory: "256Mi"
              cpu: "500m"
          readinessProbe:
            httpGet:
              path: '/readiness'
              port: 8080
              scheme: HTTP
            initialDelaySeconds: 5
            periodSeconds: 10
            timeoutSeconds: 10
          livenessProbe:
            httpGet:
              path: '/liveness'
              port: 8080
              scheme: HTTP
            initialDelaySeconds: 5
            periodSeconds: 60
            timeoutSeconds: 10
          volumeMounts:
            - mountPath: /results
              name: analyzes
        restartPolicy: Always
        volumes:
          - name: analyzes
            persistentVolumeClaim:
              claimName: analyzes
    test: false
    triggers:
    - type: ConfigChange
    - type: ImageChange
      imageChangeParams:
        automatic: true
        containerNames:
          - result-api
        from:
          kind: ImageStreamTag
          name: 'result-api:stable'

#
# Persistent volume claims
- apiVersion: v1
  kind: PersistentVolumeClaim
  metadata:
    name: analyzes
  spec:
    accessModes:
      - ReadWriteMany
    resources:
      requests:
        storage: 10Gi
    storageClassName: ${STORAGE_CLASS}

- apiVersion: v1
  kind: PersistentVolumeClaim
  metadata:
    name: buildlogs
  spec:
    accessModes:
      - ReadWriteMany
    resources:
      requests:
        storage: 10Gi
    storageClassName: ${STORAGE_CLASS}

#
# Cron jobs
- apiVersion: batch/v2alpha1
  kind: CronJob
  metadata:
    name: cleanup-job
  spec:
    #schedule: "@weekly"
    schedule: "*/1 * * * *"
    jobTemplate:
      spec:
        template:
          spec:
            serviceAccountName: analyzer
            containers:
            - image: fridex/thoth-cleanup-job
              name: cleanup-job
              env:
               - name: KUBERNETES_VERIFY_TLS
                 value: ${KUBERNETES_VERIFY_TLS}
               - name: THOTH_ANALYZER_CLEANUP_TIME
                 valueFrom:
                  configMapKeyRef:
                    key: analyzer-cleanup-time
                    name: thoth
               - name: KUBERNETES_API_URL
                 value: 'https://kubernetes.default.svc.cluster.local'
               - name: THOTH_CLEANUP_DEBUG
                 valueFrom:
                  configMapKeyRef:
                    key: debug-cleanup
                    name: thoth
              resources:
                requests:
                  memory: "32Mi"
                  cpu: "100m"
                limits:
                  memory: "128Mi"
                  cpu: "250m"
            restartPolicy: OnFailure

- apiVersion: batch/v2alpha1
  kind: CronJob
  metadata:
    name: graph-sync-job
  spec:
    schedule: "@weekly"
    jobTemplate:
      spec:
        template:
          spec:
            containers:
            - image: fridex/thoth-graph-sync-job
              name: graph-sync-job
              env:
              - name: THOTH_JANUSGRAPH_HOST
                value: janusgraph
              - name: THOTH_JANUSGRAPH_PORT
                value: '80'
              - name: THOTH_SYNC_OBSERVATIONS
                valueFrom:
                  configMapKeyRef:
                    key: sync-observations
                    name: thoth
              - name: THOTH_CEPH_HOST
                valueFrom:
                  configMapKeyRef:
                    key: ceph-host
                    name: thoth
              - name: THOTH_CEPH_BUCKET
                valueFrom:
                  configMapKeyRef:
                    key: ceph-bucket-name
                    name: thoth
              - name: THOTH_CEPH_KEY_ID
                valueFrom:
                  secretKeyRef:
                    name: thoth
                    key: ceph-key-id
              - name: THOTH_CEPH_SECRET_KEY
                valueFrom:
                  secretKeyRef:
                    name: thoth
                    key: ceph-secret-key
              resources:
                requests:
                  memory: "128Mi"
                  cpu: "125m"
                limits:
                  memory: "256Mi"
                  cpu: "500m"
            restartPolicy: Never

#
# Image streams
- apiVersion: v1
  kind: ImageStream
  metadata:
    name: python
    annotations:
      openshift.io/display-name: Python
  spec:
    tags:
      - name: "3.6"
        annotations:
          iconClass: icon-python
          supports: python:3.6,python
          version: "3.6"
        from:
          kind: DockerImage
          name: docker.io/centos/python-36-centos7:latest

- apiVersion: v1
  kind: ImageStream
  metadata:
    labels:
    name: result-api
  spec:
    name: stable

- apiVersion: v1
  kind: ImageStream
  metadata:
    labels:
    name: user-api
  spec:
    name: stable

#
# Build configs
- apiVersion: v1
  kind: BuildConfig
  metadata:
    name: user-api
  spec:
    output:
      to:
        kind: ImageStreamTag
        name: user-api:test
    source:
      type: Git
      git:
        uri: ${THOTH_USER_API_GIT_URL}
      secrets: []
    strategy:
      type: Source
      sourceStrategy:
        from:
          kind: ImageStreamTag
          name: python-36-centos7:latest
    triggers:
    - github:
        secret: ${THOTH_USER_API_GITHUB_SECRET}
      type: GitHub
    - type: ConfigChange
    - imageChange: {}
      type: ImageChange

- apiVersion: v1
  kind: BuildConfig
  metadata:
    name: result-api
  spec:
    output:
      to:
        kind: ImageStreamTag
        name: result-api:test
    source:
      git:
        uri: ${THOTH_RESULT_API_GIT_URL}
      secrets: []
      type: Git
    strategy:
      sourceStrategy:
        from:
          kind: ImageStreamTag
          name: python-36-centos7:latest
      type: Source
    triggers:
    - github:
        secret: ${THOTH_RESULT_API_GITHUB_SECRET}
      type: GitHub
    - type: ConfigChange
    - imageChange: {}
      type: ImageChange


parameters:
- description: A hostname where Thoth's Analyzer API should be exposed (will be auto-generated if empty).
  displayName: Thoth user API hostname
  required: false
  name: THOTH_USER_API_HOSTNAME

- description: A hostname where Thoth's Result API should be exposed (will be auto-generated if empty).
  displayName: Thoth result API hostname
  required: false
  name: THOTH_RESULT_API_HOSTNAME

- description: Name of the Thoth Middle Tier Namespace
  displayName: Thoth Middle Tier Namespace
  required: false
  name: THOTH_MIDDLEEND_NAMESPACE

- description: Name of the Thoth Backend Namespace
  displayName: Thoth Backend Namespace
  required: false
  name: THOTH_BACKEND_NAMESPACE

- description: Git repository for Thoth's Result API
  displayName: Thoth result-api Git
  required: true
  name: THOTH_RESULT_API_GIT_URL
  value: 'https://github.com/fridex/thoth-result-api'

- description: Git repository for Thoth's Analyzer API
  displayName: Thoth analyzer-api Git
  required: true
  name: THOTH_USER_API_GIT_URL
  value: 'https://github.com/fridex/thoth-user-api'

- description: A secret for build user-facing API triggered by GitHub
  displayName: GitHub Webhook secret for user-facing API
  required: true
  # see: https://docs.openshift.com/container-platform/3.6/dev_guide/builds/triggering_builds.html#github-webhooks
  name: THOTH_USER_API_GITHUB_SECRET
  value: 'secret101'

- description: A secret for build result API triggered by GitHub
  displayName: GitHub Webhook secret for result API
  required: true
  name: THOTH_RESULT_API_GITHUB_SECRET
  value: 'secret101'

- description: Time before analyzer pod gets removed from etcd.
  displayName: Thoth analyzer cleanup time
  required: true
  name: THOTH_ANALYZER_CLEANUP_TIME
  value: '7d'

- description: Be verbose in cluster cleanup job.
  displayName: Debug cleanup job
  required: true
  name: THOTH_CLEANUP_DEBUG
  value: '1'

- description: Turn on or off automatic observation syncing to the graph database.
  displayName: Sync observations
  required: true
  name: THOTH_SYNC_OBSERVATIONS
  value: '0'

- description: Name of bucket where results are stored to.
  displayName: Ceph bucket name
  required: true
  name: THOTH_CEPH_BUCKET
  value: 'DH-PLAYPEN'

- description: Verify TLS certificates of Kubernetes master on requests.
  displayName: Verify Kubernetes TLS
  required: true
  name: KUBERNETES_VERIFY_TLS
  value: '0'

- description: Secret to interact with Thoth endpoints that require higher privileges.
  displayName: Thoth secret
  required: true
  name: THOTH_SECRET

- description: A host:port where Ceph endpoint can be used to store/retrieve data.
  displayName: Ceph host
  required: true
  name: THOTH_CEPH_HOST

- description: Access key id for Ceph connection.
  displayName: Ceph access key id
  required: true
  name: THOTH_CEPH_KEY_ID

- description: Secret key for Ceph connection.
  displayName: Ceph secret key
  required: true
  name: THOTH_CEPH_SECRET_KEY

- description: Storage Class to use when claiming PersistentVolumes
  displayName: PVC StorageClass
  required: true
  value: glusterfs-apps
  name: STORAGE_CLASS